---
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  TransferServer:
    Type: AWS::Transfer::Server
    Properties:
      EndpointType: PUBLIC
      IdentityProviderType: SERVICE_MANAGED
      Protocols: [SFTP]
      SecurityPolicyName: TransferSecurityPolicy-2020-06
  TransferSharedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: {Service: transfer.amazonaws.com}
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BucketAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowListingOfUserFolder
                Action: s3:ListBucket
                Effect: Allow
                Resource: !GetAtt Bucket.Arn
              - Sid: HomeDirObjectAccess
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:DeleteObjectVersion
                  - s3:GetObjectVersion
                  - s3:GetObjectACL
                  - s3:PutObjectACL
                Resource: !Sub "${Bucket.Arn}/*"

Outputs:
  BucketName:
    Value: !Ref Bucket
    Export: {Name: !Sub "${AWS::StackName}-BucketName"}
  TransferServerId:
    Value: !GetAtt TransferServer.ServerId
    Export: {Name: !Sub "${AWS::StackName}-TransferServerId"}
  TransferSharedRoleArn:
    Value: !GetAtt TransferSharedRole.Arn
    Export: {Name: !Sub "${AWS::StackName}-TransferSharedRoleArn"}
  TransferServerEndpoint:
    Value: !Sub "${TransferServer.ServerId}.server.transfer.${AWS::Region}.${AWS::URLSuffix}"
